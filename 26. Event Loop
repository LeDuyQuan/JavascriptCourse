* Javascript Runtime hay V8 JS Engine có 2 phần Heap và Stack
- Memory Heap: cấp phát bộ nhớ sẽ diễn ra ở đây.
- Call Stack: cấu trúc dữ liệu nơi chứa các lời gọi hàm khi code được thực thi.


+ Vì những Web APIs như DOM, setTimeout hay HTTP Request không tồn tại trong V8 engine nên để xử lý:
-> ra đời event loop và callback queue (single call stack)


1. Stack
- Call Stack là một cấu trúc dữ liệu dạng ngăn xếp (stack) dùng để chứa thông tin về hoạt động của chương trình máy tính trong lúc thực thi
- Single Call Stack, một lúc chỉ làm một việc thôi
- Khi thực thi function A, thì A sẽ được push (on top) vào call stack. Sau khi A thực thi xong và trả về kết quả, A sẽ bị pop ra khỏi stack.
- Nhưng nếu A gọi function B thì B sẽ được push on top lên A (A lúc này đang chờ B thực thi xong). Sau khi B xong sẽ bị pop, A có kết quả và bị pop 
- Với mỗi dòng code async thì async A được push vào stack và chờ thực thi, thực thi xong pop. Rồi async B được push vào stack, chờ thực thi xong sẽ pop khỏi stack.

- Nếu đối với setTimeout: ví dụ nếu có lệnh thực thi setTimeout 5s thì:
+ setTimeout sẽ được gọi vào trong stack, nhưng bằng cách "nào đó" nó được biến mất (để còn thực hiện các lệnh khác). Sau 5s thì lệnh thực thi trong setTimeout sẽ đuợc push vào stack.
+ Chính là nhờ event loop


